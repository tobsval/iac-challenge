---
- name: Take necessary steps to secure dockerd over HTTPS
  hosts: all
  become: true
  gather_facts: false
  tasks:
  - name: Install PyOpenSSL
    pip:
      name: PyOpenSSL==20.0.1

  - name: Generate CA private key (4096 bits, RSA)
    community.crypto.openssl_privatekey:
      path: /etc/ssl/docker-ca-priv.pem

  - name: Generate CA public key (4096 bits, RSA)
    community.crypto.openssl_publickey:
      path: /etc/ssl/docker-ca-pub.pem
      privatekey_path: /etc/ssl/docker-ca-priv.pem

  - name: Generate server private key (4096 bits, RSA)
    community.crypto.openssl_privatekey:
      path: /etc/ssl/docker-srv-priv.pem

  - name: Obtain IPv4 address of VM
    shell: "set -o pipefail && ip addr | grep 192 | awk '{print $2}' | sed 's/...$//'"
    register: out
    changed_when: "out.rc != 2"

  - name: Generate OpenSSL cert sign request
    community.crypto.openssl_csr:
      path: /etc/ssl/docker-server.csr
      privatekey_path: /etc/ssl/docker-srv-priv.pem
      common_name: "{{ out.stdout }}"

  # TODO: Improve the two tasks below by using ansible's inventory reference to hosts
  # TODO: Switch from content to templating
  - name: Create extfile to allow TLS connections between authorized hosts
    copy:
      content: "subjectAltName = DNS:docker1,IP:{{ out.stdout }},IP:192.168.100.10,IP:127.0.0.1"
      dest: /etc/ssl/extfile.txt
      mode: '0644'
    when: out == 192.168.100.10

  - name: Create extfile to allow TLS connections between authorized hosts
    copy:
      content: "subjectAltName = DNS:docker2,IP:{{ out.stdout }},IP:192.168.100.10,IP:127.0.0.1"
      dest: /etc/ssl/extfile.txt
      mode: '0644'
    when: out == 192.168.100.11
